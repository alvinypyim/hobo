#!/usr/bin/env bash
set -e

main() {
  copy_src_files
  configure_git
  install_apt_packages
  install_rbenv
  install_pyenv
  clean_apt
  setup_vagrant
}

copy_src_files() {
  pushd /vagrant/src
  cp -v vimrc ~/.vimrc
  cp -v inputrc ~/.inputrc
  cp -vR install ~
  popd
}

configure_git() {
  git config --global core.editor "$(which vim)"
  cp -v /vagrant/src/gitignore ~/.gitignore
  git config --global core.excludesfile ~/.gitignore
}

install_apt_packages() {
  sudo apt-get update
  sudo apt-get -y install \
    jq \
    alpine \
    bc
}

clean_apt() {
  sudo apt-get clean
  sudo rm -Rf /var/lib/apt/lists/*
}

install_rbenv() {
  sudo apt-get -y install \
    autoconf \
    bison \
    build-essential \
    libssl-dev \
    libyaml-dev \
    libreadline6-dev \
    zlib1g-dev \
    libncurses5-dev \
    libffi-dev \
    libgdbm3 \
    libgdbm-dev
  pushd ~
  git clone https://github.com/rbenv/rbenv.git ~/.rbenv
  echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.profile
  echo 'eval "$(rbenv init -)"' >> ~/.profile
  mkdir -vp ~/.rbenv/plugins
  git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build
  popd
}

install_pyenv() {
  git clone https://github.com/pyenv/pyenv.git ~/.pyenv
  echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.profile
  echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.profile
  echo '! command -v pyenv &> /dev/null || eval "$(pyenv init -)"' >> ~/.profile
}

setup_vagrant() {
  curl -s https://raw.githubusercontent.com/hashicorp/vagrant/v2.0.1/keys/vagrant.pub > ~/.ssh/authorized_keys
}

main
